class Solution:
	def letterCombinations(self, digits: str) -> List[str]:
		keypad = {'2': 'abc',
				   '3': 'def',
				   '4': 'ghi',
				   '5': 'jkl',
				   '6': 'mno',
				   '7': 'pqrs',
				   '8': 'tuv',
				   '9': 'wxyz'}
    
		if not digits:
			return []

		output = ['']
		for digit in digits:
			temp=[]
			for letters in keypad[digit]:
				for i in output:
					temp.append(i+letters)
			output = temp
		return output
		
#the deque approach

class Solution:
    def letterCombinations(self, digits: str) -> List[str]:

        keypad = {
            "2": "abc",
            "3": "def",
            "4": "ghi",
            "5": "jkl",
            "6": "mno",
            "7": "pqrs",
            "8": "tuv",
            "9": "wxyz",
        }
        if digits == "":
            return []
        
        # letters = )
        output = list(keypad[digits[0]])
        # print(letters)
        for digit in digits[1:]:
            temp = []
            for letter in keypad[digit]:
                for o in output:
                    # print(o)
                    temp.append(o + str(letter))  # ad ae af bd be b
            output=temp
        return output
